{"version":3,"file":"110.js","sources":["webpack://shark/./src/pages/user/settings/components/AccountBindingForm.tsx","webpack://shark/./src/pages/user/settings/components/BasicSettingsForm.tsx","webpack://shark/./src/pages/user/settings/components/NotificationSettingsForm.tsx","webpack://shark/./src/pages/user/settings/components/OtherSettingsForm.tsx","webpack://shark/./src/pages/user/settings/components/PrivacySettingsForm.tsx","webpack://shark/./src/pages/user/settings/components/SecurityQuestionsForm.tsx","webpack://shark/./src/pages/user/settings/components/SecuritySettingsForm.tsx","webpack://shark/./src/pages/user/settings/components/SocialAccountsForm.tsx","webpack://shark/./src/pages/user/settings/index.tsx"],"sourcesContent":["import {\n  AlipayCircleOutlined,\n  DingdingOutlined,\n  TaobaoCircleOutlined,\n} from '@ant-design/icons'\nimport { Button, List, message } from 'antd'\nimport type { FC } from 'react'\n\nconst AccountBindingForm: FC = () => {\n  const handleBinding = (type: string) => {\n    // 处理绑定操作\n    message.info(`开始绑定${type}`)\n  }\n\n  const accountBindings = [\n    {\n      label: '淘宝',\n      description: '当前未绑定淘宝账号',\n      actionText: '绑定',\n      icon: <TaobaoCircleOutlined />,\n      onClick: () => handleBinding('淘宝'),\n    },\n    {\n      label: '支付宝',\n      description: '当前未绑定支付宝账号',\n      actionText: '绑定',\n      icon: <AlipayCircleOutlined />,\n      onClick: () => handleBinding('支付宝'),\n    },\n    {\n      label: '钉钉',\n      description: '当前未绑定钉钉账号',\n      actionText: '绑定',\n      icon: <DingdingOutlined />,\n      onClick: () => handleBinding('钉钉'),\n    },\n  ]\n\n  return (\n    <List\n      dataSource={accountBindings}\n      renderItem={item => (\n        <List.Item\n          actions={[\n            <Button\n              type=\"primary\"\n              icon={item.icon}\n              onClick={item.onClick}\n              key={item.label}\n            >\n              {item.actionText}\n            </Button>,\n          ]}\n        >\n          <List.Item.Meta\n            title={item.label}\n            description={item.description}\n            avatar={item.icon}\n          />\n        </List.Item>\n      )}\n    />\n  )\n}\n\nexport default AccountBindingForm\n","import {\n  EnvironmentOutlined,\n  MailOutlined,\n  PhoneOutlined,\n  UserOutlined,\n} from '@ant-design/icons'\nimport { Button, Form, Input, Select, message } from 'antd'\nimport type { FC } from 'react'\nimport { createRef, useEffect, useState } from 'react'\n\nconst { Option } = Select\n\nexport interface BasicSettingsFormProps {\n  initialValues: {\n    email: string\n    name: string\n    bio: string\n    country: string\n    province: string\n    address: string\n    phone: string\n  }\n}\n\nconst BasicSettingsForm: FC<BasicSettingsFormProps> = ({ initialValues }) => {\n  const [windowSize, setWindowSize] = useState<{\n    innerHeight: number\n    innerWidth: number\n  }>({ innerHeight: window.innerHeight, innerWidth: window.innerWidth })\n\n  // 获取当前窗口大小\n  const getWindowSize = () => ({\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n  })\n\n  // 定义默认布局\n  const [layout, setLayout] = useState<'horizontal' | 'vertical'>('horizontal')\n  const formLayout = {\n    labelCol: {\n      xs: { span: 3 },\n      sm: { span: 4 },\n      xl: { span: 3 },\n      xxl: { span: 1 },\n    },\n    wrapperCol: {\n      xs: { span: 20 },\n      sm: { span: 20 },\n      xl: { span: 20 },\n      xxl: { span: 24 },\n    },\n  }\n\n  // 监听窗口变化\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleResize = () => {\n    setWindowSize(getWindowSize())\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [handleResize])\n\n  // useEffect改变布局\n  useEffect(() => {\n    if (windowSize.innerWidth < 1444)\n      setLayout('vertical')\n    else setLayout('horizontal')\n  }, [windowSize])\n\n  const formref = createRef<any>()\n\n  const handleUpdate = (values: any) => {\n    console.log('更新的基本信息：', values)\n    message.success('基本信息更新成功')\n  }\n\n  useEffect(() => {\n    formref.current?.setFieldsValue(initialValues)\n  }, [initialValues, formref])\n\n  return (\n    <Form\n      layout={layout}\n      {...formLayout}\n      name=\"basic\"\n      initialValues={initialValues}\n      ref={formref}\n      onFinish={handleUpdate}\n    >\n      {/* 邮箱 */}\n      <Form.Item label=\"邮箱\" name=\"email\">\n        <Input prefix={<MailOutlined />} />\n      </Form.Item>\n\n      {/* 昵称 */}\n      <Form.Item label=\"昵称\" name=\"name\">\n        <Input prefix={<UserOutlined />} />\n      </Form.Item>\n\n      {/* 个人简介 */}\n      <Form.Item label=\"个人简介\" name=\"bio\">\n        <Input.TextArea />\n      </Form.Item>\n\n      {/* 国家/地区 */}\n      <Form.Item label=\"国家/地区\" name=\"country\">\n        <Select>\n          <Option value=\"china\">中国</Option>\n          <Option value=\"usa\">美国</Option>\n          <Option value=\"uk\">英国</Option>\n        </Select>\n      </Form.Item>\n\n      {/* 所在省市 */}\n      <Form.Item label=\"所在省市\" name=\"province\">\n        <Select>\n          <Option value=\"hangzhou\">杭州</Option>\n          <Option value=\"beijing\">北京</Option>\n          <Option value=\"shanghai\">上海</Option>\n        </Select>\n      </Form.Item>\n\n      {/* 街道地址 */}\n      <Form.Item label=\"街道地址\" name=\"address\">\n        <Input prefix={<EnvironmentOutlined />} />\n      </Form.Item>\n\n      {/* 联系电话 */}\n      <Form.Item label=\"联系电话\" name=\"phone\">\n        <Input prefix={<PhoneOutlined />} />\n      </Form.Item>\n\n      {/* 更新按钮 */}\n      <Form.Item wrapperCol={{ offset: 6, span: 12 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          更新基本信息\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default BasicSettingsForm\n","import { MessageOutlined } from '@ant-design/icons'\nimport { List, Switch, message } from 'antd'\nimport type { FC } from 'react'\nimport React from 'react'\n\nconst NotificationSettingsForm: FC = () => {\n  const handleSwitchChange = (label: string, checked: boolean) => {\n    // 处理 Switch 开关变化\n    if (checked)\n      message.success(`${label}已开启`)\n    else message.warning(`${label}已关闭`)\n  }\n\n  const notificationSettings = [\n    {\n      label: '其他用户的消息',\n      description: '其他用户的消息将以站内信的形式通知',\n    },\n    {\n      label: '系统消息',\n      description: '系统消息将以站内信的形式通知',\n    },\n    {\n      label: '待办任务',\n      description: '待办任务将以站内信的形式通知',\n    },\n  ]\n\n  return (\n    <List\n      dataSource={notificationSettings}\n      renderItem={item => (\n        <List.Item>\n          <List.Item.Meta\n            avatar={<MessageOutlined />}\n            title={item.label}\n            description={item.description}\n          />\n          <Switch\n            onChange={checked => handleSwitchChange(item.label, checked)}\n          />\n        </List.Item>\n      )}\n    />\n  )\n}\n\nexport default NotificationSettingsForm\n","import { FileDoneOutlined, NotificationOutlined } from '@ant-design/icons'\nimport { List, Switch, message } from 'antd'\nimport type { FC } from 'react'\n\nconst OtherSettingsForm: FC = () => {\n  const handleSwitchChange = (checked: boolean) => {\n    // 处理开关状态变化\n    console.log('开关状态变化：', checked)\n    message.success(checked ? '功能已启用' : '功能已关闭')\n  }\n\n  // const handleSave = () => {\n  //   // 处理保存设置操作\n  //   message.success('设置已保存')\n  // }\n\n  const settings = [\n    {\n      label: '自动保存草稿',\n      icon: <FileDoneOutlined />,\n      switchName: 'autoSave',\n    },\n    {\n      label: '接收推送通知',\n      icon: <NotificationOutlined />,\n      switchName: 'pushNotification',\n    },\n  ]\n\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={settings}\n      renderItem={item => (\n        <List.Item\n          actions={[\n            <Switch key={item.switchName} onChange={handleSwitchChange} />,\n          ]}\n        >\n          <List.Item.Meta title={item.label} avatar={item.icon} />\n        </List.Item>\n      )}\n    />\n  )\n}\n\nexport default OtherSettingsForm\n","import {\n  EnvironmentOutlined,\n  EyeOutlined,\n  MessageOutlined,\n} from '@ant-design/icons'\nimport { List, Switch, message } from 'antd'\n\nconst PrivacySettingsForm: FC = () => {\n  const handleSwitchChange = (label: string, checked: boolean) => {\n    // 处理开关变化\n    console.log(`${label} switch checked: ${checked}`)\n    // 假设这里是发送更新请求的逻辑\n    // 在这里展示一个消息提示框，表示更新成功\n    message.success(`${label}设置已更新`)\n  }\n\n  const privacySettings = [\n    {\n      label: '个人资料可见性',\n      description: '其他用户可以查看我的个人资料',\n      icon: <EyeOutlined />,\n    },\n    {\n      label: '消息接收权限',\n      description: '允许其他用户向我发送消息',\n      icon: <MessageOutlined />,\n    },\n    {\n      label: '位置信息分享',\n      description: '允许共享我的位置信息',\n      icon: <EnvironmentOutlined />,\n    },\n  ]\n\n  return (\n    <List\n      dataSource={privacySettings}\n      renderItem={item => (\n        <List.Item>\n          <List.Item.Meta\n            avatar={<MessageOutlined />}\n            title={item.label}\n            description={item.description}\n          />\n          <Switch\n            onChange={checked => handleSwitchChange(item.label, checked)}\n          />\n        </List.Item>\n      )}\n    />\n  )\n}\n\nexport default PrivacySettingsForm\n","import { LockOutlined, SafetyCertificateOutlined } from '@ant-design/icons' // 导入所需图标\nimport { Button, Form, Input, message } from 'antd'\nimport type { FC } from 'react'\nimport { createRef, useEffect } from 'react'\n\nexport interface SecurityQuestionsFormProps {\n  initialValues: {\n    securityQuestion: string\n    securityAnswer: string\n  }\n}\n\nconst SecurityQuestionsForm: FC<SecurityQuestionsFormProps> = ({\n  initialValues,\n}) => {\n  const securityRef = createRef<any>()\n\n  useEffect(() => {\n    securityRef.current.setFieldsValue({ ...initialValues })\n  }, [securityRef, initialValues])\n  const handleSubmit = (values: any) => {\n    // 提交表单逻辑\n    console.log('提交的密保问题和答案：', values)\n    // 模拟提交成功，并展示成功消息\n    message.success('密保问题设置成功')\n  }\n\n  return (\n    <Form\n      ref={securityRef}\n      name=\"Security\"\n      initialValues={initialValues}\n      onFinish={handleSubmit}\n      labelCol={{\n        xs: { span: 3 },\n        sm: { span: 4 },\n        xl: { span: 3 },\n        xxl: { span: 1 },\n      }}\n      wrapperCol={{\n        xs: {\n          span: 18,\n        },\n        sm: { span: 16 },\n        xl: { span: 18 },\n        xxl: { span: 24 },\n      }}\n    >\n      <Form.Item\n        label=\"密保问题\"\n        name=\"securityQuestion\"\n        rules={[{ required: true, message: '请输入密保问题' }]}\n      >\n        <Input placeholder=\"请输入您的密保问题\" prefix={<LockOutlined />} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"密保答案\"\n        name=\"securityAnswer\"\n        rules={[{ required: true, message: '请输入密保答案' }]}\n      >\n        <Input\n          placeholder=\"请输入您的密保答案\"\n          prefix={<SafetyCertificateOutlined />}\n        />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 3, span: 12 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          设置密保问题\n        </Button>\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 3, span: 12 }}>\n        <p style={{ color: 'rgba(0, 0, 0, 0.45)' }}>\n          提示：设置密保问题可以帮助您更好地保护账户安全，请确保密保问题和答案的准确性和私密性。\n        </p>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default SecurityQuestionsForm\n","import {\n  LockOutlined,\n  MailOutlined,\n  MobileOutlined,\n  SafetyOutlined,\n} from '@ant-design/icons'\nimport { Button, List, Skeleton, message } from 'antd'\nimport type { FC } from 'react'\n\nimport { encryptEmailOrPhone } from '@/utils/encrypt'\n\nexport interface SecurityQuestionsFormProps {\n  initialValues: {\n    email: string\n    phone: string\n  }\n}\n\nconst SecuritySettingsForm: FC<SecurityQuestionsFormProps> = ({\n  initialValues,\n}) => {\n  const handleModify = (type: string) => {\n    // 处理修改操作\n    message.info(`开始修改${type}`)\n  }\n\n  const handleSet = (type: string) => {\n    // 处理设置操作\n    message.info(`开始设置${type}`)\n  }\n\n  const securitySettings = [\n    {\n      label: '账户密码',\n      description: '当前密码强度：强',\n      actionText: '修改',\n      icon: <LockOutlined />,\n      onClick: () => handleModify('账户密码'),\n    },\n    {\n      label: '密保手机',\n      description: `已绑定手机：${encryptEmailOrPhone(initialValues.phone)}`, // 加密手机号\n      actionText: '修改',\n      icon: <MobileOutlined />,\n      onClick: () => handleModify('密保手机'),\n    },\n    {\n      label: '密保问题',\n      description: '未设置密保问题，密保问题可有效保护账户安全',\n      actionText: '设置',\n      icon: <SafetyOutlined />,\n      onClick: () => handleSet('密保问题'),\n    },\n    {\n      label: '备用邮箱',\n      description: `已绑定邮箱：${encryptEmailOrPhone(initialValues?.email)}`, // 加密备用邮箱\n      actionText: '修改',\n      icon: <MailOutlined />,\n      onClick: () => handleModify('备用邮箱'),\n    },\n    {\n      label: 'MFA 设备',\n      description: '未绑定 MFA 设备，绑定后，可以进行二次确认',\n      actionText: '绑定',\n      icon: <SafetyOutlined />,\n      onClick: () => handleSet('MFA 设备'),\n    },\n  ]\n\n  return (\n    <List\n      dataSource={securitySettings}\n      renderItem={item => (\n        <List.Item\n          key={item.label}\n          actions={[\n            <Button\n              key={item.label}\n              type=\"primary\"\n              onClick={item.onClick}\n              icon={item.icon}\n              className=\"ml-2\"\n            >\n              {item.actionText}\n            </Button>,\n          ]}\n        >\n          <Skeleton title={false} loading={false} active>\n            <List.Item.Meta\n              title={<a href=\"https://ant.design\">{item.label}</a>}\n              description={item.description}\n            />\n          </Skeleton>\n        </List.Item>\n      )}\n    />\n  )\n}\n\nexport default SecuritySettingsForm\n","import { QqOutlined, WechatOutlined, WeiboOutlined } from '@ant-design/icons'\nimport { Button, List, message } from 'antd'\nimport type { FC } from 'react'\n\nconst SocialAccountsForm: FC = () => {\n  const handleBind = (accountType: string) => {\n    // 处理绑定社交账号操作\n    message.info(`开始绑定${accountType}`)\n  }\n\n  const handleUnbind = (accountType: string) => {\n    // 处理解绑社交账号操作\n    message.info(`开始解绑${accountType}`)\n  }\n\n  const socialAccounts = [\n    {\n      label: '微信',\n      description: '当前未绑定微信账号',\n      bindActionText: '绑定',\n      bindOnClick: () => handleBind('微信'),\n      unbindActionText: '解绑',\n      unbindOnClick: () => handleUnbind('微信'),\n      icon: <WechatOutlined />,\n    },\n    {\n      label: '微博',\n      description: '当前未绑定微博账号',\n      bindActionText: '绑定',\n      bindOnClick: () => handleBind('微博'),\n      unbindActionText: '解绑',\n      unbindOnClick: () => handleUnbind('微博'),\n      icon: <WeiboOutlined />,\n    },\n    {\n      label: 'QQ',\n      description: '当前未绑定QQ账号',\n      bindActionText: '绑定',\n      bindOnClick: () => handleBind('QQ'),\n      unbindActionText: '解绑',\n      unbindOnClick: () => handleUnbind('QQ'),\n      icon: <QqOutlined />,\n    },\n  ]\n\n  return (\n    <List\n      dataSource={socialAccounts}\n      renderItem={item => (\n        <List.Item\n          actions={[\n            <Button\n              key={item.label}\n              type=\"primary\"\n              icon={item.icon}\n              onClick={item.unbindOnClick}\n            >\n              {item.bindActionText}\n            </Button>,\n          ]}\n        >\n          <List.Item.Meta\n            title={item.label}\n            description={item.description}\n            avatar={item.icon}\n          />\n        </List.Item>\n      )}\n    />\n  )\n}\n\nexport default SocialAccountsForm\n","import {\n  AppstoreOutlined,\n  EyeOutlined,\n  GoogleOutlined,\n  LockOutlined,\n  SafetyCertificateOutlined,\n  SettingOutlined,\n  SoundOutlined,\n  UserOutlined,\n} from '@ant-design/icons' // 导入所需图标\nimport { Spin, Tabs, message } from 'antd'\nimport axios from 'axios'\nimport { useEffect, useState } from 'react'\n\nimport {\n  AccountBindingForm,\n  BasicSettingsForm,\n  NotificationSettingsForm,\n  OtherSettingsForm,\n  PrivacySettingsForm,\n  SecurityQuestionsForm,\n  SecuritySettingsForm,\n  SocialAccountsForm,\n} from './components'\nimport type { BasicSettingsFormProps } from './components/BasicSettingsForm'\n\nfunction SettingsPage() {\n  const [data, setData] = useState<BasicSettingsFormProps['initialValues']>({})\n  const [loading, setLoading] = useState(true)\n  const [tabPosition, setTabPosition] = useState<'left' | 'top'>('left')\n\n  const fetchUser = async () => {\n    setLoading(true)\n    try {\n      const response = await axios('/api/user/userInfo')\n      const data = await response.data\n      setData(data)\n    }\n    catch (error: any) {\n      message.error(`Error fetching data: ${error}`)\n    }\n    finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchUser()\n    const handleResize = () => {\n      // 根据视口宽度修改tabPosition\n      if (window.innerWidth <= 768)\n        setTabPosition('top')\n      else setTabPosition('left')\n    }\n    // 初始设置一次\n    handleResize()\n    // 监听窗口变化\n    window.addEventListener('resize', handleResize)\n    // 清理函数\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return (\n    <Spin spinning={loading}>\n      <Tabs\n        tabPosition={tabPosition}\n        items={[\n          {\n            key: 'basic',\n            label: `基本设置`,\n            icon: <UserOutlined />,\n            children: <BasicSettingsForm initialValues={data} />,\n          },\n          {\n            key: 'security',\n            label: `安全设置`,\n            icon: <LockOutlined />,\n            children: <SecuritySettingsForm initialValues={data} />,\n          },\n          {\n            key: 'account',\n            label: `账号绑定`,\n            icon: <GoogleOutlined />,\n            children: <AccountBindingForm />,\n          },\n          {\n            key: 'notification',\n            label: `新消息通知`,\n            icon: <SoundOutlined />,\n            children: <NotificationSettingsForm />,\n          },\n          {\n            key: 'privacy',\n            label: `隐私设置`,\n            icon: <EyeOutlined />,\n            children: <PrivacySettingsForm />,\n          },\n          {\n            key: 'Security',\n            label: `密保设置`,\n            icon: <SafetyCertificateOutlined />,\n            children: (\n              <SecurityQuestionsForm\n                initialValues={{\n                  securityQuestion: '您的生日是？',\n                  securityAnswer: '1990-01-01',\n                }}\n              />\n            ),\n          },\n          {\n            key: 'social',\n            label: `社交账号`,\n            icon: <AppstoreOutlined />,\n            children: <SocialAccountsForm />,\n          },\n          {\n            key: 'other',\n            label: `其他设置`,\n            icon: <SettingOutlined />,\n            children: <OtherSettingsForm />,\n          },\n        ]}\n      />\n    </Spin>\n  )\n}\n\nexport default SettingsPage\n"],"names":["handleBinding","type","message","accountBindings","label","description","actionText","icon","TaobaoCircleOutlined","onClick","AlipayCircleOutlined","DingdingOutlined","List","dataSource","renderItem","item","actions","Button","title","avatar","Option","Select","initialValues","windowSize","setWindowSize","useState","innerHeight","window","innerWidth","getWindowSize","layout","setLayout","handleResize","useEffect","addEventListener","removeEventListener","formref","createRef","current","setFieldsValue","Form","labelCol","xs","span","sm","xl","xxl","wrapperCol","name","ref","onFinish","values","console","log","Input","prefix","MailOutlined","UserOutlined","value","EnvironmentOutlined","PhoneOutlined","offset","htmlType","handleSwitchChange","checked","MessageOutlined","Switch","onChange","settings","FileDoneOutlined","switchName","NotificationOutlined","itemLayout","privacySettings","EyeOutlined","securityRef","rules","required","placeholder","LockOutlined","SafetyCertificateOutlined","style","color","handleModify","handleSet","securitySettings","encryptEmailOrPhone","phone","MobileOutlined","SafetyOutlined","email","className","Skeleton","loading","active","href","handleBind","accountType","handleUnbind","socialAccounts","bindActionText","bindOnClick","unbindActionText","unbindOnClick","WechatOutlined","WeiboOutlined","QqOutlined","data","setData","setLoading","tabPosition","setTabPosition","fetchUser","response","error","Spin","spinning","Tabs","items","key","children","BasicSettingsForm","SecuritySettingsForm","GoogleOutlined","AccountBindingForm","SoundOutlined","NotificationSettingsForm","PrivacySettingsForm","SecurityQuestionsForm","securityQuestion","securityAnswer","AppstoreOutlined","SocialAccountsForm","SettingOutlined","OtherSettingsForm"],"mappings":"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"}