name: deploy
on:
  schedule:
    - cron: '30 06 * * *'
  push:
    branches: [master, dev]
  workflow_dispatch:

# 设置上海时区
env:
  TZ: Asia/Shanghai

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Mirror the Github organization repos to Gitee.
        uses: Yikun/hub-mirror-action@master
        with:
          src: github/h7ml
          dst: gitee/h7ml
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          dst_token: ${{ secrets.GITEE_TOKEN }}
          white_list: 'shark' # 只同步shark
          force_update: true
          account_type: user
          # clone_style: ssh
          debug: true
    needs: pages
  pages:
    # 任务运行的容器类型（虚拟机环境）
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.6.2]
        yarn-version: [1.22.21]
    # 任务执行的步骤
    steps:
      # 步骤名称
      - name: Checkout 🚀
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} 🚀
        uses: actions/setup-node@v2
        with:
          node-version: 21.6.2
      - name: Cache yarn modules  🚀
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: pnpm script 🚀
        run: |
          npm install -g pnpm
          pnpm install
  build:
    name: build 🚀
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [latest, current, stable]
    steps:
      - name: Checkout 🚀
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} 🚀
        uses: actions/setup-node@v2
        with:
          node-version: 21.6.2
      - name: Cache yarn modules  🚀
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Install dependencies  🚀
        run: yarn install
      - name: Generate files  🚀
        run: yarn build
    needs: pages
  deploy:
    name: deploy 🚀
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.6.2]
        yarn-version: [1.22.21]
    steps:
      - name: Checkout 🚀
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} 🚀
        uses: actions/setup-node@v2
        with:
          node-version: 21.6.2
      - name: Cache yarn modules  🚀
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: yarn script 🚀
        run: |
          yarn install
          yarn build
      - name: Deploy to surge 🚀
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: shark-h7ml.surge.sh
          project: ./dist
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
      - name: Upload surge service and generate preview URL 🚀
        id: deploy
        run: |
          export GITHUB_SHA=${{ github.sha }}
          export GITHUB_SHA_SUB=${GITHUB_SHA: 0: 7 }
          export DEPLOY_DOMAIN=https://shark-$GITHUB_SHA_SUB.surge.sh
          npx surge --project ./dist --domain $DEPLOY_DOMAIN --token ${{ secrets.surge_token }}
          echo the preview URL is $DEPLOY_DOMAIN
          echo "::set-output name=url::$DEPLOY_DOMAIN"
      #      - name: Deploy to vercel 🚀
      #        uses: amondnet/vercel-action@v20
      #        with:
      #          vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #          github-token: ${{ secrets.GIT_TOKEN }}
      #          vercel-args: '--prod' #Optional
      #          vercel-org-id: ${{ secrets.ORG_ID}}
      #          vercel-project-id: ${{ secrets.PROJECT_ID}}
      #          working-directory: ./dev
      #      # 使用云开发 Github Action 部署
      #      - name: Deploy CloudBase 🚀
      #        uses: TencentCloudBase/cloudbase-action@v1.1.0
      #        with:
      #          # 云开发的访问密钥 secretId 和 secretKey
      #          secretId: ${{ secrets.SECRET_ID }}
      #          secretKey: ${{ secrets.SECRET_KEY }}
      #          # 云开发的环境id
      #          envId: ${{ secrets.ENV_ID }}
      #          # Github 项目静态文件的路径
      #          staticSrcPath: ./dev
      - name: Accurics Scan 🚀
        id: accurics-scan
        uses: docker://accurics/terrascan-action:latest
        with:
          only_warn: true
          verbose: true
          webhook_url: https://app.accurics.com/v1/api/terrascan
          webhook_token: d73c0d62-aab9-4d65-940d-2e6b690a48a7
      - name: Upload  🚀
        uses: actions/upload-artifact@v2
        with:
          name: shark
          path: dist
    #      - name: lighthouse 🚀
    #        uses: treosh/lighthouse-ci-action@v2
    #        with:
    #          runs: 5
    #          uploadArtifacts: true
    #          configPath: './.github/workflows/setup/lighthouse-audit.json'
    needs: build

  clean:
    name: Clean
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Shanghai
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: Apocalypsor/Workflows-Cleaner
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv wheel
      - name: Install dependencies
        run: |
          pipenv requirements > requirements.txt
          pip install -r requirements.txt
      - name: Clean
        env:
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}
          EXPIRE_TIME: 12h
        run: python run.py
    needs: build
